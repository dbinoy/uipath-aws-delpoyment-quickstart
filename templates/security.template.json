{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a security group with Ingress and Egress rules and IAM role to allow access to S3 bucket",
	"Parameters": {
		"VPCID": {
			"Type": "AWS::EC2::VPC::Id"
		},
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
		},
        "StorageBucket" :{
            "Type": "String",
            "Description": "Bucket to create for file storage",
            "AllowedPattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d\\.]$",
            "Default": "uipath-storage-bucket",
            "ConstraintDescription" : "Should be a Valid S3 Bucket Name"
        }   		
	},    
	"Resources": {
		"SecurityGroup": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Security Group allowing access to WindowsRM from anywhere",
                "GroupName" : {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "MogojRDSSecurityGroup" ]]},
                "Tags" :  [ {"Key" : "Name", "Value" : {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "SecurityGroup" ]]}  } ],
                "VpcId" : {"Ref": "VPCID"},
                "SecurityGroupIngress" : [
                    { "IpProtocol" : "tcp", "FromPort" : 5985, "ToPort" : 5986, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 5985, "ToPort" : 5986, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "tcp", "FromPort" : 443, "ToPort" : 443, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 443, "ToPort" : 443, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "tcp", "FromPort" : 6379, "ToPort" : 6379, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 6379, "ToPort" : 6379, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "tcp", "FromPort" : 10000, "ToPort" : 10000, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 10000, "ToPort" : 10000, "CidrIp" : {"Ref": "VPCCIDR"} },    
                    { "IpProtocol" : "tcp", "FromPort" : 22, "ToPort" : 22, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 22, "ToPort" : 22, "CidrIp" : {"Ref": "VPCCIDR"} },      
                    { "IpProtocol" : "tcp", "FromPort" : 8443, "ToPort" : 8443, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 8443, "ToPort" : 8443, "CidrIp" : {"Ref": "VPCCIDR"} },      
                    { "IpProtocol" : "tcp", "FromPort" : 9443, "ToPort" : 9443, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 9443, "ToPort" : 9443, "CidrIp" : {"Ref": "VPCCIDR"} },      
                    { "IpProtocol" : "tcp", "FromPort" : 80, "ToPort" : 80, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 80, "ToPort" : 80, "CidrIp" : {"Ref": "VPCCIDR"} },      
                    { "IpProtocol" : "tcp", "FromPort" : 3389, "ToPort" : 3389, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 3389, "ToPort" : 3389, "CidrIp" : {"Ref": "VPCCIDR"} },      
                    { "IpProtocol" : "tcp", "FromPort" : 1433, "ToPort" : 1433, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 1433, "ToPort" : 1433, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "tcp", "FromPort" : 2049, "ToPort" : 2049, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 2049, "ToPort" : 2049, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "udp", "FromPort" : 2049, "ToPort" : 2049, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "udp", "FromPort" : 2049, "ToPort" : 2049, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "tcp", "FromPort" : 111, "ToPort" : 111, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 111, "ToPort" : 111, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "udp", "FromPort" : 111, "ToPort" : 111, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "udp", "FromPort" : 111, "ToPort" : 111, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "tcp", "FromPort" : 20048, "ToPort" : 20048, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 20048, "ToPort" : 20048, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "udp", "FromPort" : 20048, "ToPort" : 20048, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "udp", "FromPort" : 20048, "ToPort" : 20048, "CidrIp" : {"Ref": "VPCCIDR"} }                                                                                                                                                                                                                                                                               
                ],
                "SecurityGroupEgress" : [
                    { "IpProtocol" : "tcp", "FromPort" : 80, "ToPort" : 80, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 80, "ToPort" : 80, "CidrIp" : {"Ref": "VPCCIDR"} }, 
                    { "IpProtocol" : "tcp", "FromPort" : 443, "ToPort" : 443, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 443, "ToPort" : 443, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "tcp", "FromPort" : 6379, "ToPort" : 6379, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 6379, "ToPort" : 6379, "CidrIp" : {"Ref": "VPCCIDR"} },
                    { "IpProtocol" : "tcp", "FromPort" : 10000, "ToPort" : 10000, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 10000, "ToPort" : 10000, "CidrIp" : {"Ref": "VPCCIDR"} }, 
                    { "IpProtocol" : "tcp", "FromPort" : 22, "ToPort" : 22, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 22, "ToPort" : 22, "CidrIp" : {"Ref": "VPCCIDR"} },   
                    { "IpProtocol" : "tcp", "FromPort" : 8443, "ToPort" : 8443, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 8443, "ToPort" : 8443, "CidrIp" : {"Ref": "VPCCIDR"} },      
                    { "IpProtocol" : "tcp", "FromPort" : 9443, "ToPort" : 9443, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 9443, "ToPort" : 9443, "CidrIp" : {"Ref": "VPCCIDR"} },                      
                    { "IpProtocol" : "tcp", "FromPort" : 1433, "ToPort" : 1433, "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : 1433, "ToPort" : 1433, "CidrIp" : {"Ref": "VPCCIDR"} }   
                                                                                                                                                                
                ]                
            }
		},
		"S3Bucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName" : {"Ref": "StorageBucket"},
				"PublicAccessBlockConfiguration" : {
					"BlockPublicAcls" : true,
					"BlockPublicPolicy" : true,
					"IgnorePublicAcls" : true,
					"RestrictPublicBuckets" : true
				},
				"VersioningConfiguration": {
					"Status": "Enabled"
				}
				
			}
		},		
		"FileShareIAMRole": {
			"Type" : "AWS::IAM::Role",
			"Properties" : {
					"AssumeRolePolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [
							{
								"Effect": "Allow",
								"Principal": {
									"Service": [
										"storagegateway.amazonaws.com"
									]
								},
								"Action": [
									"sts:AssumeRole"
								]
							}
						]
					},
					"Description" : "IAM Role providing S3 Access to Storage Gateway",
					"RoleName": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "FileShareIAMRole"]]}
				}
		},
		"FileShareIAMPolicy": {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"s3:GetAccelerateConfiguration",
								"s3:GetBucketLocation",
								"s3:GetBucketVersioning",
								"s3:ListBucket",
								"s3:ListBucketVersions",
								"s3:ListBucketMultipartUploads"
							],
							"Resource": { "Fn::Sub": [ "arn:aws:s3:::.${BucketArn}", { "BucketArn": {"Ref" : "StorageBucket" }} ]}
						},
						{
							"Effect": "Allow",
							"Action": [
								"s3:AbortMultipartUpload",
								"s3:DeleteObject",
								"s3:DeleteObjectVersion",
								"s3:GetObject",
								"s3:GetObjectAcl",
								"s3:GetObjectVersion",
								"s3:ListMultipartUploadParts",
								"s3:PutObject",
								"s3:PutObjectAcl"
							],
							"Resource": { "Fn::Sub": [ "arn:aws:s3:::.${BucketArn}/*", { "BucketArn": {"Ref" : "StorageBucket" }} ]}
						}
					]
				},			
				"PolicyName" : "storagegateway-iam-policy",
				"Roles" : [ {"Ref": "FileShareIAMRole"} ]
			}
		},
        "CustomLambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "storagegateway:*"
                                    ],
                                    "Resource": "*"
								},
								{
									"Effect": "Allow",
									"Action": [
										"ec2:DescribeSnapshots",
										"ec2:DeleteSnapshot"
									],
									"Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
								{
									"Effect": "Allow",
									"Action": [
                                        "acm:DeleteCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:RequestCertificate",
                                        "acm:GetCertificate",
                                        "acm:ListCertificates",
                                        "acm:ImportCertificate",
                                        "acm:RenewCertificate"
									],
									"Resource": "*"
                                },                                
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "xray:PutTraceSegments"
                                    ],
                                    "Resource": "*"
                                }                                								
                            ]
                        }
                    }
                ]
            }
        }				        
	},
	"Outputs": {
		"SecurityGroup": {
			"Description": "Security Group allowing access to WindowsRM from anywhere",
			"Value": {"Ref": "SecurityGroup"}			
		},		
        "StorageBucket": {
            "Value": {"Fn::GetAtt" : ["S3Bucket", "Arn"]},
            "Description": "Storage Bucket ARN"
		},
		"FileShareIAMRole" : {
			"Description" : "IAM Role providing S3 Access to Storage Gateway",
			"Value" : {"Fn::GetAtt" : ["FileShareIAMRole", "Arn"]}			
		},
		"FileShareIAMPolicy": {
			"Description": "Storage Gateway IAM Policy",
			"Value": {"Ref": "FileShareIAMPolicy"}			
		},
		"CustomLambdaRoleArn": {
			"Description": "ARN for IAM Role to be assumed by Lambda functinos creating Storage Gateway custom resources",
			"Value": { "Fn::GetAtt" : ["CustomLambdaExecutionRole", "Arn"] }  
		}					
	}    
}